from pygame import *
from random import randint

#klasa główna
class GameSprite(sprite.Sprite):
    #konstruktor
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        super().__init__()

        #wgrana grafika
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed

        #hitboxy postaci
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


#klasa gracza
class Player(GameSprite):
    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

#klasa przeciwnika  
#class Enemy(GameSprite):
    #metoda do poruszania sie duszkow
    #def update(self):
        #self.rect.y += self.speed
        #global lost
        #znika w momencie osiagniecia dolnej granicy
        #if self.rect.y >= win_height :
        #    self.rect.x = randint(80, win_width - 80)
        #    self.rect.y = 0
        #    lost = lost + 1
        #    missed.play()        

#Scena gry:
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption("ping pong")
background = transform.scale(image.load("galaxy.jpg"), (win_width, win_height))

gracz_l = Player('paletka2.png', 100, 250, 60, 120, 10)
gracz_r = Player('paletka2.png', win_width - 100, win_height - 250, 60, 120, 10)
pilka = GameSprite('pilka2.png', 250, 350,50, 50, 10)


speed_x = 3
speed_y = 3
font.init()
font1 = font.Font(None, 35)
lose1 = font1.render(
    'Player 1 loses!', True, (180, 0, 0))
lose2 = font1.render(
    'Player 2 loses!', True, (180, 0, 0))

#petla
finish = False
run = True
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False

    if not finish:
        #update tła
        window.blit(background, (0, 0))
        gracz_l.reset()
        gracz_l.update_l()
        gracz_r.reset()
        gracz_r.update_r()
        pilka.reset()
        pilka.update()
        pilka.rect.x += speed_x
        pilka.rect.y += speed_y

    if pilka.rect.y > win_height - 50 or pilka.rect.y < 0:
        speed_y *= -1

    if sprite.collide_rect(gracz_l, pilka) or sprite.collide_rect(gracz_r, pilka):
        speed_x *= -1
    
    if pilka.rect.x < 0:
        finish = True
        window.blit(lose1, (200, 200))
    if pilka.rect.x > win_width - 20:
        finish = True
        window.blit(lose2, (200, 200))
    

    display.update()
    time.delay(50)
